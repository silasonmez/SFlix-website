{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5114/api',\n  // Backend URL'i\n  withCredentials: true // Cookie ile çalışan işlemler için gerekli\n});\nexport default api;\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post('/Authentication/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Giriş başarısız.');\n  }\n};\nexport const registerUser = async (name, email, password) => {\n  try {\n    const response = await api.post('/Authentication/Register', {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Kayıt başarısız.');\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    await api.post('/Authentication/Logout');\n  } catch (error) {\n    throw new Error('Çıkış yapılırken bir hata oluştu.');\n  }\n};\nexport const getSeries = async () => {\n  try {\n    const response = await api.get('/Series');\n    return response.data; // API'den gelen veriler\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Series verileri alınırken bir hata oluştu.');\n  }\n};\nexport const getMovies = async () => {\n  const response = await fetch('http://localhost:5114/api/movies');\n  if (!response.ok) {\n    throw new Error('Film verileri alınamadı.');\n  }\n  const data = await response.json();\n  return data;\n};\nexport const getCategories = async () => {\n  try {\n    const response = await api.get('/Categories'); // Categories API'sini çağırıyoruz\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Kategoriler yüklenemedi.');\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","loginUser","email","password","response","post","data","error","_error$response","_error$response$data","Error","message","registerUser","name","_error$response2","_error$response2$data","logoutUser","getSeries","get","_error$response3","_error$response3$data","getMovies","fetch","ok","json","getCategories","_error$response4","_error$response4$data"],"sources":["C:/Users/silas/Desktop/user-login/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5114/api', // Backend URL'i\r\n  withCredentials: true, // Cookie ile çalışan işlemler için gerekli\r\n});\r\n\r\nexport default api;\r\n\r\nexport const loginUser = async (email: string, password: string) => {\r\n  try {\r\n    const response = await api.post('/Authentication/login', { email, password });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    throw new Error(error.response?.data?.message || 'Giriş başarısız.');\r\n  }\r\n};\r\n\r\nexport const registerUser = async (name: string, email: string, password: string) => {\r\n  try {\r\n    const response = await api.post('/Authentication/Register', { name, email, password });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    throw new Error(error.response?.data?.message || 'Kayıt başarısız.');\r\n  }\r\n  \r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await api.post('/Authentication/Logout');\r\n  } catch (error: any) {\r\n    throw new Error('Çıkış yapılırken bir hata oluştu.');\r\n  }\r\n};\r\n\r\nexport const getSeries = async () => {\r\n  try {\r\n    const response = await api.get('/Series');\r\n    return response.data; // API'den gelen veriler\r\n  } catch (error: any) {\r\n    throw new Error(error.response?.data?.message || 'Series verileri alınırken bir hata oluştu.');\r\n  }\r\n};  \r\nexport const getMovies = async () => {\r\n  const response = await fetch('http://localhost:5114/api/movies');\r\n  if (!response.ok) {\r\n    throw new Error('Film verileri alınamadı.');\r\n  }\r\n  const data = await response.json();\r\n  return data;\r\n};\r\nexport const getCategories = async () => {\r\n  try {\r\n    const response = await api.get('/Categories'); // Categories API'sini çağırıyoruz\r\n    return response.data;\r\n  } catch (error: any) {\r\n    throw new Error(error.response?.data?.message || 'Kategoriler yüklenemedi.');\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}