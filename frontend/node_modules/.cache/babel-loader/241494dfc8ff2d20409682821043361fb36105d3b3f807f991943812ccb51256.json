{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas\\\\Desktop\\\\user-login\\\\src\\\\pages\\\\AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoints = [{\n  category: \"Movies\",\n  methods: [{\n    name: \"Get All Movies\",\n    type: \"GET\",\n    url: \"/api/Movies\"\n  }, {\n    name: \"Create Movie\",\n    type: \"POST\",\n    url: \"/api/Movies\",\n    params: [\"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\"],\n    example: {\n      title: \"Example Movie\",\n      releaseYear: 2023,\n      duration: \"1 Saat 30 Dakika\",\n      imdbRating: 8.5,\n      description: \"This is an example movie description.\"\n    }\n  }, {\n    name: \"Get Movie by ID\",\n    type: \"GET\",\n    url: \"/api/Movies/{movieId}\",\n    params: [\"movieId\"]\n  }, {\n    name: \"Update Movie by ID\",\n    type: \"PUT\",\n    url: \"/api/Movies/{movieId}\",\n    params: [\"movieId\", \"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\"]\n  }, {\n    name: \"Delete Movie by ID\",\n    type: \"DELETE\",\n    url: \"/api/Movies/{movieId}\",\n    params: [\"movieId\"]\n  }]\n}, {\n  category: \"Favorites\",\n  methods: [{\n    name: \"Get All Favorites\",\n    type: \"GET\",\n    url: \"/api/Favorites\"\n  }, {\n    name: \"Create Favorite\",\n    type: \"POST\",\n    url: \"/api/Favorites\",\n    params: [\"title\", \"description\", \"type\"],\n    example: {\n      title: \"Example Favorite\",\n      description: \"This is an example favorite item.\",\n      type: \"Film\"\n    }\n  }, {\n    name: \"Update Favorite by ID\",\n    type: \"PUT\",\n    url: \"/api/Favorites/{favoriteId}\",\n    params: [\"favoriteId\", \"title\", \"description\", \"type\"]\n  }, {\n    name: \"Delete Favorite by ID\",\n    type: \"DELETE\",\n    url: \"/api/Favorites/{favoriteId}\",\n    params: [\"favoriteId\"]\n  }]\n}];\nconst AdminPanel = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({});\n  const [errors, setErrors] = useState({});\n  const validateParams = (requiredParams, example) => {\n    const newErrors = {};\n    requiredParams.forEach(param => {\n      if (!params[param]) {\n        newErrors[param] = `${param} is required.`;\n      }\n    });\n    if (example && requiredParams.length > 0) {\n      newErrors[\"format\"] = `Example JSON format: ${JSON.stringify(example, null, 2)}`;\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = (key, value) => {\n    setParams(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [key]: \"\"\n    }));\n  };\n  const handleRequest = async (method, url, requiredParams = [], example) => {\n    if (!validateParams(requiredParams, example)) return;\n    setLoading(true);\n    setResponse(null);\n    try {\n      let formattedUrl = url;\n      requiredParams.forEach(param => {\n        if (url.includes(`{${param}}`)) {\n          formattedUrl = formattedUrl.replace(`{${param}}`, params[param] || \"\");\n        }\n      });\n      const bodyParams = requiredParams.reduce((acc, param) => {\n        if (!url.includes(`{${param}}`)) {\n          acc[param] = params[param];\n        }\n        return acc;\n      }, {});\n      const options = {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      if ([\"POST\", \"PUT\"].includes(method)) {\n        options.body = JSON.stringify(bodyParams);\n      }\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(`Error: ${res.status} - ${res.statusText} - ${errorData.message || \"Unknown Error\"}`);\n      }\n      const data = await res.json();\n      setResponse(JSON.stringify(data, null, 2));\n    } catch (error) {\n      setResponse(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.adminContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), endpoints.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.endpointGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.groupTitle,\n        children: group.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonsContainer,\n        children: group.methods.map(method => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [method.type, \": \", method.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), method.params && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: method.params.map(param => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: param,\n                value: params[param] || \"\",\n                onChange: e => handleInputChange(param, e.target.value),\n                className: styles.paramInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this), errors[param] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.error,\n                children: errors[param]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 43\n              }, this)]\n            }, param, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRequest(method.type, method.url, method.params, method.example),\n            className: styles.endpointButton,\n            children: \"Execute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, method.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, group.category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.responseContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"psS94Y0mTB2YusJsG+v7kBi3ctQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","endpoints","category","methods","name","type","url","params","example","title","releaseYear","duration","imdbRating","description","AdminPanel","_s","response","setResponse","loading","setLoading","setParams","errors","setErrors","validateParams","requiredParams","newErrors","forEach","param","length","JSON","stringify","Object","keys","handleInputChange","key","value","prev","handleRequest","method","formattedUrl","includes","replace","bodyParams","reduce","acc","options","headers","body","res","fetch","ok","errorData","json","Error","status","statusText","message","data","error","className","adminContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","endpointGroup","groupTitle","buttonsContainer","placeholder","onChange","e","target","paramInput","onClick","endpointButton","responseContainer","_c","$RefreshReg$"],"sources":["C:/Users/silas/Desktop/user-login/src/pages/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AdminPanel.module.css';\r\n\r\nconst endpoints = [\r\n  {\r\n    category: \"Movies\",\r\n    methods: [\r\n      { name: \"Get All Movies\", type: \"GET\", url: \"/api/Movies\" },\r\n      {\r\n        name: \"Create Movie\",\r\n        type: \"POST\",\r\n        url: \"/api/Movies\",\r\n        params: [\"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\"],\r\n        example: {\r\n          title: \"Example Movie\",\r\n          releaseYear: 2023,\r\n          duration: \"1 Saat 30 Dakika\",\r\n          imdbRating: 8.5,\r\n          description: \"This is an example movie description.\",\r\n        },\r\n      },\r\n      {\r\n        name: \"Get Movie by ID\",\r\n        type: \"GET\",\r\n        url: \"/api/Movies/{movieId}\",\r\n        params: [\"movieId\"],\r\n      },\r\n      {\r\n        name: \"Update Movie by ID\",\r\n        type: \"PUT\",\r\n        url: \"/api/Movies/{movieId}\",\r\n        params: [\"movieId\", \"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\"],\r\n      },\r\n      {\r\n        name: \"Delete Movie by ID\",\r\n        type: \"DELETE\",\r\n        url: \"/api/Movies/{movieId}\",\r\n        params: [\"movieId\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Favorites\",\r\n    methods: [\r\n      { name: \"Get All Favorites\", type: \"GET\", url: \"/api/Favorites\" },\r\n      {\r\n        name: \"Create Favorite\",\r\n        type: \"POST\",\r\n        url: \"/api/Favorites\",\r\n        params: [\"title\", \"description\", \"type\"],\r\n        example: {\r\n          title: \"Example Favorite\",\r\n          description: \"This is an example favorite item.\",\r\n          type: \"Film\",\r\n        },\r\n      },\r\n      {\r\n        name: \"Update Favorite by ID\",\r\n        type: \"PUT\",\r\n        url: \"/api/Favorites/{favoriteId}\",\r\n        params: [\"favoriteId\", \"title\", \"description\", \"type\"],\r\n      },\r\n      {\r\n        name: \"Delete Favorite by ID\",\r\n        type: \"DELETE\",\r\n        url: \"/api/Favorites/{favoriteId}\",\r\n        params: [\"favoriteId\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const [response, setResponse] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState<Record<string, string>>({});\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const validateParams = (requiredParams: string[], example?: Record<string, any>): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n    requiredParams.forEach((param) => {\r\n      if (!params[param]) {\r\n        newErrors[param] = `${param} is required.`;\r\n      }\r\n    });\r\n    if (example && requiredParams.length > 0) {\r\n      newErrors[\"format\"] = `Example JSON format: ${JSON.stringify(example, null, 2)}`;\r\n    }\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (key: string, value: string) => {\r\n    setParams((prev) => ({ ...prev, [key]: value }));\r\n    setErrors((prev) => ({ ...prev, [key]: \"\" }));\r\n  };\r\n\r\n  const handleRequest = async (\r\n    method: string,\r\n    url: string,\r\n    requiredParams: string[] = [],\r\n    example?: Record<string, any>\r\n  ) => {\r\n    if (!validateParams(requiredParams, example)) return;\r\n\r\n    setLoading(true);\r\n    setResponse(null);\r\n\r\n    try {\r\n      let formattedUrl = url;\r\n      requiredParams.forEach((param) => {\r\n        if (url.includes(`{${param}}`)) {\r\n          formattedUrl = formattedUrl.replace(`{${param}}`, params[param] || \"\");\r\n        }\r\n      });\r\n\r\n      const bodyParams = requiredParams.reduce((acc, param) => {\r\n        if (!url.includes(`{${param}}`)) {\r\n          acc[param] = params[param];\r\n        }\r\n        return acc;\r\n      }, {} as Record<string, string>);\r\n\r\n      const options: RequestInit = {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      if ([\"POST\", \"PUT\"].includes(method)) {\r\n        options.body = JSON.stringify(bodyParams);\r\n      }\r\n\r\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(`Error: ${res.status} - ${res.statusText} - ${errorData.message || \"Unknown Error\"}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setResponse(JSON.stringify(data, null, 2));\r\n    } catch (error: any) {\r\n      setResponse(`Error: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.adminContainer}>\r\n      <h1 className={styles.title}>Admin Panel</h1>\r\n      {endpoints.map((group) => (\r\n        <div key={group.category} className={styles.endpointGroup}>\r\n          <h2 className={styles.groupTitle}>{group.category}</h2>\r\n          <div className={styles.buttonsContainer}>\r\n            {group.methods.map((method) => (\r\n              <div key={method.name}>\r\n                <h3>{method.type}: {method.name}</h3>\r\n                {method.params && (\r\n                  <div>\r\n                    {method.params.map((param) => (\r\n                      <div key={param}>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder={param}\r\n                          value={params[param] || \"\"}\r\n                          onChange={(e) => handleInputChange(param, e.target.value)}\r\n                          className={styles.paramInput}\r\n                        />\r\n                        {errors[param] && <span className={styles.error}>{errors[param]}</span>}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                <button\r\n                  onClick={() => handleRequest(method.type, method.url, method.params, method.example)}\r\n                  className={styles.endpointButton}\r\n                >\r\n                  Execute\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className={styles.responseContainer}>\r\n        <h2>Response:</h2>\r\n        {loading ? <p>Loading...</p> : <pre>{response}</pre>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}