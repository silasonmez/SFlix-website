{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas\\\\user-login\\\\user-login\\\\src\\\\pages\\\\SeriesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getSeries } from '../services/api';\nimport styles from './SeriesPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeriesPage = () => {\n  _s();\n  const [series, setSeries] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const data = await getSeries();\n        setSeries(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchSeries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Diziler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: series.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.coverImage,\n          alt: `${item.name} Kapak`,\n          className: styles.cardImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.cardTitle,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cardHover,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sezon Say\\u0131s\\u0131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 18\n            }, this), \" \", item.seasons]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"B\\xF6l\\xFCm Say\\u0131s\\u0131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 18\n            }, this), \" \", item.episodes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kategoriler:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 18\n            }, this), \" \", item.categories.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SeriesPage, \"fHV0bFtVIWYq/wsOQXd4lIxLaBg=\");\n_c = SeriesPage;\nexport default SeriesPage;\nvar _c;\n$RefreshReg$(_c, \"SeriesPage\");","map":{"version":3,"names":["React","useEffect","useState","getSeries","styles","jsxDEV","_jsxDEV","SeriesPage","_s","series","setSeries","error","setError","fetchSeries","data","err","message","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","grid","map","item","card","src","coverImage","alt","name","cardImage","cardTitle","cardHover","seasons","episodes","categories","join","id","_c","$RefreshReg$"],"sources":["C:/Users/silas/user-login/user-login/src/pages/SeriesPage.tsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getSeries } from '../services/api';\r\nimport styles from './SeriesPage.module.css';\r\n\r\ninterface Series {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  seasons: number;\r\n  episodes: number;\r\n  categories: string[]; // Yeni alan: Kategoriler\r\n  coverImage: string; // Kapak fotoğrafı\r\n}\r\n\r\nconst SeriesPage: React.FC = () => {\r\n  const [series, setSeries] = useState<Series[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const data = await getSeries();\r\n        setSeries(data);\r\n      } catch (err: any) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Diziler</h1>\r\n      {error && <p className={styles.error}>{error}</p>}\r\n      <div className={styles.grid}>\r\n        {series.map((item) => (\r\n          <div key={item.id} className={styles.card}>\r\n            {/* Kapak Fotoğrafı ve Ad */}\r\n            <img\r\n              src={item.coverImage}\r\n              alt={`${item.name} Kapak`}\r\n              className={styles.cardImage}\r\n            />\r\n            <h2 className={styles.cardTitle}>{item.name}</h2>\r\n\r\n            {/* Hover Detayları */}\r\n            <div className={styles.cardHover}>\r\n              <p><strong>Sezon Sayısı:</strong> {item.seasons}</p>\r\n              <p><strong>Bölüm Sayısı:</strong> {item.episodes}</p>\r\n              <p><strong>Kategoriler:</strong> {item.categories.join(', ')}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeriesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}