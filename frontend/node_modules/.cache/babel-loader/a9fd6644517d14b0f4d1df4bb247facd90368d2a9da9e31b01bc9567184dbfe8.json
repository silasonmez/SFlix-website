{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas\\\\Desktop\\\\user-login\\\\src\\\\pages\\\\ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ProfilePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [userEmail, setUserEmail] = useState(null);\n  const [userName, setUserName] = useState(null);\n  useEffect(() => {\n    // Kullanıcı bilgilerini çek\n    fetch(\"http://localhost:5114/api/Users/GetUserDetails\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${document.cookie.split(\"=\")[1]}` // JWT token\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Kullanıcı bilgisi alınamadı\");\n      }\n      return response.json();\n    }).then(data => {\n      setUserEmail(data.email);\n      setUserName(data.name);\n    }).catch(error => console.error(\"Hata:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profil Bilgileri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" \", userName || \"Yükleniyor...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \" \", userEmail || \"Yükleniyor...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"0FWPe+EJTCZizG+O3teUHDsHNIA=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProfilePage","_s","userEmail","setUserEmail","userName","setUserName","fetch","method","headers","Authorization","document","cookie","split","then","response","ok","Error","json","data","email","name","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/silas/Desktop/user-login/src/pages/ProfilePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ProfilePage.css\";\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const [userEmail, setUserEmail] = useState<string | null>(null);\r\n  const [userName, setUserName] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Kullanıcı bilgilerini çek\r\n    fetch(\"http://localhost:5114/api/Users/GetUserDetails\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${document.cookie.split(\"=\")[1]}`, // JWT token\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Kullanıcı bilgisi alınamadı\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setUserEmail(data.email);\r\n        setUserName(data.name);\r\n      })\r\n      .catch((error) => console.error(\"Hata:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-card\">\r\n        <h1>Profil Bilgileri</h1>\r\n        <p>\r\n          <strong>Ad:</strong> {userName || \"Yükleniyor...\"}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {userEmail || \"Yükleniyor...\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAgB,IAAI,CAAC;EAC/D,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,gDAAgD,EAAE;MACtDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE;MAC5D;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdf,YAAY,CAACe,IAAI,CAACC,KAAK,CAAC;MACxBd,WAAW,CAACa,IAAI,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC1B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAQ;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACzB,QAAQ,IAAI,eAAe;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACJ9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3B,SAAS,IAAI,eAAe;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAtCID,WAAqB;AAAA8B,EAAA,GAArB9B,WAAqB;AAwC3B,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}