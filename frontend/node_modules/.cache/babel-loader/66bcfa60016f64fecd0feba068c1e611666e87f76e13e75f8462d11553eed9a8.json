{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas\\\\Desktop\\\\user-login\\\\src\\\\pages\\\\AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoints = [{\n  category: \"Authentication\",\n  methods: [{\n    name: \"Login\",\n    type: \"POST\",\n    url: \"/api/Authentication/login\"\n  }, {\n    name: \"Register\",\n    type: \"POST\",\n    url: \"/api/Authentication/Register\"\n  }, {\n    name: \"Logout\",\n    type: \"POST\",\n    url: \"/api/Authentication/Logout\"\n  }]\n}, {\n  category: \"Categories\",\n  methods: [{\n    name: \"Get All Categories\",\n    type: \"GET\",\n    url: \"/api/Categories\"\n  }, {\n    name: \"Create Category\",\n    type: \"POST\",\n    url: \"/api/Categories\"\n  }, {\n    name: \"Get Category by ID\",\n    type: \"GET\",\n    url: \"/api/Categories/{categoryId}\"\n  }, {\n    name: \"Update Category by ID\",\n    type: \"PUT\",\n    url: \"/api/Categories/{categoryId}\"\n  }, {\n    name: \"Delete Category by ID\",\n    type: \"DELETE\",\n    url: \"/api/Categories/{categoryId}\"\n  }]\n}, {\n  category: \"Movies\",\n  methods: [{\n    name: \"Get All Movies\",\n    type: \"GET\",\n    url: \"/api/Movies\"\n  }, {\n    name: \"Create Movie\",\n    type: \"POST\",\n    url: \"/api/Movies\"\n  }, {\n    name: \"Get Movie by ID\",\n    type: \"GET\",\n    url: \"/api/Movies/{movieId}\"\n  }, {\n    name: \"Update Movie by ID\",\n    type: \"PUT\",\n    url: \"/api/Movies/{movieId}\"\n  }, {\n    name: \"Delete Movie by ID\",\n    type: \"DELETE\",\n    url: \"/api/Movies/{movieId}\"\n  }]\n}\n// Diğer kategorileri de aynı şekilde ekleyebilirsiniz\n];\nconst AdminPanel = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleRequest = async (method, url) => {\n    setLoading(true);\n    setResponse(null);\n    try {\n      // Mock veri gönderiyoruz. Gerçek veriyle test edebilirsiniz.\n      const formattedUrl = url.replace(\"{categoryId}\", \"1\").replace(\"{movieId}\", \"1\");\n      const options = {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      if (method === \"POST\" || method === \"PUT\") {\n        options.body = JSON.stringify({\n          key: \"value\"\n        }); // POST ve PUT için body\n      }\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\n      const data = await res.json();\n      setResponse(JSON.stringify(data, null, 2));\n    } catch (error) {\n      setResponse(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.adminContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), endpoints.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.endpointGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.groupTitle,\n        children: group.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonsContainer,\n        children: group.methods.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRequest(method.type, method.url),\n          className: styles.endpointButton,\n          children: [method.type, \": \", method.name]\n        }, method.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, group.category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.responseContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"FIK5qJfkcJaa/MGseMxgwrCwhz4=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","endpoints","category","methods","name","type","url","AdminPanel","_s","response","setResponse","loading","setLoading","handleRequest","method","formattedUrl","replace","options","headers","body","JSON","stringify","key","res","fetch","data","json","error","message","className","adminContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","group","endpointGroup","groupTitle","buttonsContainer","onClick","endpointButton","responseContainer","_c","$RefreshReg$"],"sources":["C:/Users/silas/Desktop/user-login/src/pages/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AdminPanel.module.css';\r\n\r\nconst endpoints = [\r\n  {\r\n    category: \"Authentication\",\r\n    methods: [\r\n      { name: \"Login\", type: \"POST\", url: \"/api/Authentication/login\" },\r\n      { name: \"Register\", type: \"POST\", url: \"/api/Authentication/Register\" },\r\n      { name: \"Logout\", type: \"POST\", url: \"/api/Authentication/Logout\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Categories\",\r\n    methods: [\r\n      { name: \"Get All Categories\", type: \"GET\", url: \"/api/Categories\" },\r\n      { name: \"Create Category\", type: \"POST\", url: \"/api/Categories\" },\r\n      { name: \"Get Category by ID\", type: \"GET\", url: \"/api/Categories/{categoryId}\" },\r\n      { name: \"Update Category by ID\", type: \"PUT\", url: \"/api/Categories/{categoryId}\" },\r\n      { name: \"Delete Category by ID\", type: \"DELETE\", url: \"/api/Categories/{categoryId}\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Movies\",\r\n    methods: [\r\n      { name: \"Get All Movies\", type: \"GET\", url: \"/api/Movies\" },\r\n      { name: \"Create Movie\", type: \"POST\", url: \"/api/Movies\" },\r\n      { name: \"Get Movie by ID\", type: \"GET\", url: \"/api/Movies/{movieId}\" },\r\n      { name: \"Update Movie by ID\", type: \"PUT\", url: \"/api/Movies/{movieId}\" },\r\n      { name: \"Delete Movie by ID\", type: \"DELETE\", url: \"/api/Movies/{movieId}\" },\r\n    ],\r\n  },\r\n  // Diğer kategorileri de aynı şekilde ekleyebilirsiniz\r\n];\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const [response, setResponse] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleRequest = async (method: string, url: string) => {\r\n    setLoading(true);\r\n    setResponse(null);\r\n    try {\r\n      // Mock veri gönderiyoruz. Gerçek veriyle test edebilirsiniz.\r\n      const formattedUrl = url.replace(\"{categoryId}\", \"1\").replace(\"{movieId}\", \"1\");\r\n      const options: RequestInit = {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      if (method === \"POST\" || method === \"PUT\") {\r\n        options.body = JSON.stringify({ key: \"value\" }); // POST ve PUT için body\r\n      }\r\n\r\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\r\n      const data = await res.json();\r\n      setResponse(JSON.stringify(data, null, 2));\r\n    } catch (error: any) {\r\n      setResponse(`Error: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.adminContainer}>\r\n      <h1 className={styles.title}>Admin Panel</h1>\r\n      {endpoints.map((group) => (\r\n        <div key={group.category} className={styles.endpointGroup}>\r\n          <h2 className={styles.groupTitle}>{group.category}</h2>\r\n          <div className={styles.buttonsContainer}>\r\n            {group.methods.map((method) => (\r\n              <button\r\n                key={method.name}\r\n                onClick={() => handleRequest(method.type, method.url)}\r\n                className={styles.endpointButton}\r\n              >\r\n                {method.type}: {method.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Response Alanı */}\r\n      <div className={styles.responseContainer}>\r\n        <h2>Response:</h2>\r\n        {loading ? <p>Loading...</p> : <pre>{response}</pre>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}