{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas\\\\Desktop\\\\user-login (3)\\\\user-login\\\\src\\\\pages\\\\AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./AdminPanel.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoints = [\n// {\n//   category: \"Authentication\",\n//   methods: [\n//     { name: \"Login\", type: \"POST\", url: \"/api/Authentication/login\", params: [\"email\", \"password\"] },\n//     { name: \"Register\", type: \"POST\", url: \"/api/Authentication/Register\", params: [\"email\", \"password\", \"name\"] },\n//     { name: \"Logout\", type: \"POST\", url: \"/api/Authentication/Logout\" },\n//   ],\n// },\n{\n  category: \"Favorites\",\n  methods: [{\n    name: \"Get All Favorites\",\n    type: \"GET\",\n    url: \"/api/Favorites\"\n  }, {\n    name: \"Create Favorite\",\n    type: \"POST\",\n    url: \"/api/Favorites\",\n    params: [\"title\", \"description\", \"type\"]\n  }, {\n    name: \"Update Favorite by ID\",\n    type: \"PUT\",\n    url: \"/api/Favorites/{favoriteId}\",\n    params: [\"favoriteId\", \"title\", \"description\", \"type\"]\n  }, {\n    name: \"Delete Favorite by ID\",\n    type: \"DELETE\",\n    url: \"/api/Favorites/{favoriteId}\",\n    params: [\"favoriteId\"]\n  }]\n}, {\n  category: \"Movies\",\n  methods: [{\n    name: \"Get All Movies\",\n    type: \"GET\",\n    url: \"/api/Movies\"\n  },\n  // { name: \"Create Movie\", type: \"POST\", url: \"/api/Movies\", params: [\"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\", \"categoryIds\"] },\n  {\n    name: \"Get Movie by ID\",\n    type: \"GET\",\n    url: \"/api/Movies/{movieId}\",\n    params: [\"movieId\"]\n  },\n  // { name: \"Update Movie by ID\", type: \"PUT\", url: \"/api/Movies/{movieId}\", params: [\"movieId\", \"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\", \"categoryIds\"] },\n  {\n    name: \"Delete Movie by ID\",\n    type: \"DELETE\",\n    url: \"/api/Movies/{movieId}\",\n    params: [\"movieId\"]\n  }]\n}, {\n  category: \"Series\",\n  methods: [{\n    name: \"Get All Series\",\n    type: \"GET\",\n    url: \"/api/Series\"\n  },\n  // { name: \"Create Series\", type: \"POST\", url: \"/api/Series\", params: [\"title\", \"numberOfSeasons\", \"numberOfEpisodes\", \"rating\", \"description\", \"startYear\", \"endYear\", \"categoryIds\"] },\n  {\n    name: \"Get Series by ID\",\n    type: \"GET\",\n    url: \"/api/Series/{seriesId}\",\n    params: [\"seriesId\"]\n  },\n  // { name: \"Update Series by ID\", type: \"PUT\", url: \"/api/Series/{seriesId}\", params: [\"seriesId\", \"title\", \"numberOfSeasons\", \"numberOfEpisodes\", \"rating\", \"description\", \"startYear\", \"endYear\", \"categoryIds\"] },\n  {\n    name: \"Delete Series by ID\",\n    type: \"DELETE\",\n    url: \"/api/Series/{seriesId}\",\n    params: [\"seriesId\"]\n  }]\n}, {\n  category: \"Users\",\n  methods: [{\n    name: \"Get All Users\",\n    type: \"GET\",\n    url: \"/api/Users\"\n  }, {\n    name: \"Create User\",\n    type: \"POST\",\n    url: \"/api/Users\",\n    params: [\"name\", \"email\", \"password\"]\n  }, {\n    name: \"Get User by ID\",\n    type: \"GET\",\n    url: \"/api/Users/{userId}\",\n    params: [\"userId\"]\n  }, {\n    name: \"Update User by ID\",\n    type: \"PUT\",\n    url: \"/api/Users/{userId}\",\n    params: [\"userId\", \"name\", \"email\", \"password\"]\n  }, {\n    name: \"Delete User by ID\",\n    type: \"DELETE\",\n    url: \"/api/Users/{userId}\",\n    params: [\"userId\"]\n  }]\n}];\nconst AdminPanel = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({});\n  const [errors, setErrors] = useState({});\n  const validateParams = requiredParams => {\n    const newErrors = {};\n    requiredParams.forEach(param => {\n      if (!params[param]) {\n        newErrors[param] = `${param} is required.`;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = (key, value) => {\n    setParams(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [key]: \"\"\n    }));\n  };\n  const handleRequest = async (method, url, requiredParams = []) => {\n    if (!validateParams(requiredParams)) return;\n    setLoading(true);\n    setResponse(null);\n    try {\n      let formattedUrl = url;\n      requiredParams.forEach(param => {\n        if (url.includes(`{${param}}`)) {\n          formattedUrl = formattedUrl.replace(`{${param}}`, params[param] || \"\");\n        }\n      });\n      const bodyParams = requiredParams.reduce((acc, param) => {\n        if (!url.includes(`{${param}}`)) {\n          acc[param] = params[param];\n        }\n        return acc;\n      }, {});\n      const options = {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      if ([\"POST\", \"PUT\"].includes(method)) {\n        options.body = JSON.stringify(bodyParams);\n      }\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(`Error: ${res.status} - ${res.statusText} - ${errorData.message || \"Unknown Error\"}`);\n      }\n      const data = await res.json();\n      setResponse(JSON.stringify(data, null, 2));\n    } catch (error) {\n      setResponse(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.adminContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), endpoints.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.endpointGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.groupTitle,\n        children: group.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonsContainer,\n        children: group.methods.map(method => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [method.type, \": \", method.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), method.params && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: method.params.map(param => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: param,\n                value: params[param] || \"\",\n                onChange: e => handleInputChange(param, e.target.value),\n                className: styles.paramInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, this), errors[param] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.error,\n                children: errors[param]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 43\n              }, this)]\n            }, param, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRequest(method.type, method.url, method.params),\n            className: styles.endpointButton,\n            children: \"Execute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, method.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, group.category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.responseContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"psS94Y0mTB2YusJsG+v7kBi3ctQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","endpoints","category","methods","name","type","url","params","AdminPanel","_s","response","setResponse","loading","setLoading","setParams","errors","setErrors","validateParams","requiredParams","newErrors","forEach","param","Object","keys","length","handleInputChange","key","value","prev","handleRequest","method","formattedUrl","includes","replace","bodyParams","reduce","acc","options","headers","body","JSON","stringify","res","fetch","ok","errorData","json","Error","status","statusText","message","data","error","className","adminContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","group","endpointGroup","groupTitle","buttonsContainer","placeholder","onChange","e","target","paramInput","onClick","endpointButton","responseContainer","_c","$RefreshReg$"],"sources":["C:/Users/silas/Desktop/user-login (3)/user-login/src/pages/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./AdminPanel.module.css\";\r\n\r\nconst endpoints = [\r\n  // {\r\n  //   category: \"Authentication\",\r\n  //   methods: [\r\n  //     { name: \"Login\", type: \"POST\", url: \"/api/Authentication/login\", params: [\"email\", \"password\"] },\r\n  //     { name: \"Register\", type: \"POST\", url: \"/api/Authentication/Register\", params: [\"email\", \"password\", \"name\"] },\r\n  //     { name: \"Logout\", type: \"POST\", url: \"/api/Authentication/Logout\" },\r\n  //   ],\r\n  // },\r\n  {\r\n    category: \"Favorites\",\r\n    methods: [\r\n      { name: \"Get All Favorites\", type: \"GET\", url: \"/api/Favorites\" },\r\n      { name: \"Create Favorite\", type: \"POST\", url: \"/api/Favorites\", params: [\"title\", \"description\", \"type\"] },\r\n      { name: \"Update Favorite by ID\", type: \"PUT\", url: \"/api/Favorites/{favoriteId}\", params: [\"favoriteId\", \"title\", \"description\", \"type\"] },\r\n      { name: \"Delete Favorite by ID\", type: \"DELETE\", url: \"/api/Favorites/{favoriteId}\", params: [\"favoriteId\"] },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Movies\",\r\n    methods: [\r\n      { name: \"Get All Movies\", type: \"GET\", url: \"/api/Movies\" },\r\n      // { name: \"Create Movie\", type: \"POST\", url: \"/api/Movies\", params: [\"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\", \"categoryIds\"] },\r\n      { name: \"Get Movie by ID\", type: \"GET\", url: \"/api/Movies/{movieId}\", params: [\"movieId\"] },\r\n      // { name: \"Update Movie by ID\", type: \"PUT\", url: \"/api/Movies/{movieId}\", params: [\"movieId\", \"title\", \"releaseYear\", \"duration\", \"imdbRating\", \"description\", \"categoryIds\"] },\r\n      { name: \"Delete Movie by ID\", type: \"DELETE\", url: \"/api/Movies/{movieId}\", params: [\"movieId\"] },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Series\",\r\n    methods: [\r\n      { name: \"Get All Series\", type: \"GET\", url: \"/api/Series\" },\r\n      // { name: \"Create Series\", type: \"POST\", url: \"/api/Series\", params: [\"title\", \"numberOfSeasons\", \"numberOfEpisodes\", \"rating\", \"description\", \"startYear\", \"endYear\", \"categoryIds\"] },\r\n      { name: \"Get Series by ID\", type: \"GET\", url: \"/api/Series/{seriesId}\", params: [\"seriesId\"] },\r\n      // { name: \"Update Series by ID\", type: \"PUT\", url: \"/api/Series/{seriesId}\", params: [\"seriesId\", \"title\", \"numberOfSeasons\", \"numberOfEpisodes\", \"rating\", \"description\", \"startYear\", \"endYear\", \"categoryIds\"] },\r\n      { name: \"Delete Series by ID\", type: \"DELETE\", url: \"/api/Series/{seriesId}\", params: [\"seriesId\"] },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Users\",\r\n    methods: [\r\n      { name: \"Get All Users\", type: \"GET\", url: \"/api/Users\" },\r\n      { name: \"Create User\", type: \"POST\", url: \"/api/Users\", params: [\"name\", \"email\", \"password\"] },\r\n      { name: \"Get User by ID\", type: \"GET\", url: \"/api/Users/{userId}\", params: [\"userId\"] },\r\n      { name: \"Update User by ID\", type: \"PUT\", url: \"/api/Users/{userId}\", params: [\"userId\", \"name\", \"email\", \"password\"] },\r\n      { name: \"Delete User by ID\", type: \"DELETE\", url: \"/api/Users/{userId}\", params: [\"userId\"] },\r\n    ],\r\n  },\r\n];\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const [response, setResponse] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState<Record<string, string>>({});\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const validateParams = (requiredParams: string[]): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n    requiredParams.forEach((param) => {\r\n      if (!params[param]) {\r\n        newErrors[param] = `${param} is required.`;\r\n      }\r\n    });\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (key: string, value: string) => {\r\n    setParams((prev) => ({ ...prev, [key]: value }));\r\n    setErrors((prev) => ({ ...prev, [key]: \"\" }));\r\n  };\r\n\r\n  const handleRequest = async (method: string, url: string, requiredParams: string[] = []) => {\r\n    if (!validateParams(requiredParams)) return;\r\n\r\n    setLoading(true);\r\n    setResponse(null);\r\n\r\n    try {\r\n      let formattedUrl = url;\r\n      requiredParams.forEach((param) => {\r\n        if (url.includes(`{${param}}`)) {\r\n          formattedUrl = formattedUrl.replace(`{${param}}`, params[param] || \"\");\r\n        }\r\n      });\r\n\r\n      const bodyParams = requiredParams.reduce((acc, param) => {\r\n        if (!url.includes(`{${param}}`)) {\r\n          acc[param] = params[param];\r\n        }\r\n        return acc;\r\n      }, {} as Record<string, string>);\r\n\r\n      const options: RequestInit = {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      if ([\"POST\", \"PUT\"].includes(method)) {\r\n        options.body = JSON.stringify(bodyParams);\r\n      }\r\n\r\n      const res = await fetch(`http://localhost:5114${formattedUrl}`, options);\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(`Error: ${res.status} - ${res.statusText} - ${errorData.message || \"Unknown Error\"}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setResponse(JSON.stringify(data, null, 2));\r\n    } catch (error: any) {\r\n      setResponse(`Error: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.adminContainer}>\r\n      <h1 className={styles.title}>Admin Panel</h1>\r\n      {endpoints.map((group) => (\r\n        <div key={group.category} className={styles.endpointGroup}>\r\n          <h2 className={styles.groupTitle}>{group.category}</h2>\r\n          <div className={styles.buttonsContainer}>\r\n            {group.methods.map((method) => (\r\n              <div key={method.name}>\r\n                <h3>\r\n                  {method.type}: {method.name}\r\n                </h3>\r\n                {method.params && (\r\n                  <div>\r\n                    {method.params.map((param) => (\r\n                      <div key={param}>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder={param}\r\n                          value={params[param] || \"\"}\r\n                          onChange={(e) => handleInputChange(param, e.target.value)}\r\n                          className={styles.paramInput}\r\n                        />\r\n                        {errors[param] && <span className={styles.error}>{errors[param]}</span>}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                <button\r\n                  onClick={() => handleRequest(method.type, method.url, method.params)}\r\n                  className={styles.endpointButton}\r\n                >\r\n                  Execute\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className={styles.responseContainer}>\r\n        <h2>Response:</h2>\r\n        {loading ? <p>Loading...</p> : <pre>{response}</pre>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,WAAW;EACrBC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAiB,CAAC,EACjE;IAAEF,IAAI,EAAE,iBAAiB;IAAEC,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE,gBAAgB;IAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM;EAAE,CAAC,EAC1G;IAAEH,IAAI,EAAE,uBAAuB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,6BAA6B;IAAEC,MAAM,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM;EAAE,CAAC,EAC1I;IAAEH,IAAI,EAAE,uBAAuB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAE,6BAA6B;IAAEC,MAAM,EAAE,CAAC,YAAY;EAAE,CAAC;AAEjH,CAAC,EACD;EACEL,QAAQ,EAAE,QAAQ;EAClBC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAc,CAAC;EAC3D;EACA;IAAEF,IAAI,EAAE,iBAAiB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,uBAAuB;IAAEC,MAAM,EAAE,CAAC,SAAS;EAAE,CAAC;EAC3F;EACA;IAAEH,IAAI,EAAE,oBAAoB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAE,uBAAuB;IAAEC,MAAM,EAAE,CAAC,SAAS;EAAE,CAAC;AAErG,CAAC,EACD;EACEL,QAAQ,EAAE,QAAQ;EAClBC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAc,CAAC;EAC3D;EACA;IAAEF,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,wBAAwB;IAAEC,MAAM,EAAE,CAAC,UAAU;EAAE,CAAC;EAC9F;EACA;IAAEH,IAAI,EAAE,qBAAqB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAE,wBAAwB;IAAEC,MAAM,EAAE,CAAC,UAAU;EAAE,CAAC;AAExG,CAAC,EACD;EACEL,QAAQ,EAAE,OAAO;EACjBC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAa,CAAC,EACzD;IAAEF,IAAI,EAAE,aAAa;IAAEC,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE,YAAY;IAAEC,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU;EAAE,CAAC,EAC/F;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,MAAM,EAAE,CAAC,QAAQ;EAAE,CAAC,EACvF;IAAEH,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU;EAAE,CAAC,EACvH;IAAEH,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,MAAM,EAAE,CAAC,QAAQ;EAAE,CAAC;AAEjG,CAAC,CACF;AAED,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,MAAM,EAAEO,SAAS,CAAC,GAAGjB,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAChE,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAEhE,MAAMoB,cAAc,GAAIC,cAAwB,IAAc;IAC5D,MAAMC,SAAiC,GAAG,CAAC,CAAC;IAC5CD,cAAc,CAACE,OAAO,CAAEC,KAAK,IAAK;MAChC,IAAI,CAACd,MAAM,CAACc,KAAK,CAAC,EAAE;QAClBF,SAAS,CAACE,KAAK,CAAC,GAAG,GAAGA,KAAK,eAAe;MAC5C;IACF,CAAC,CAAC;IACFL,SAAS,CAACG,SAAS,CAAC;IACpB,OAAOG,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACC,GAAW,EAAEC,KAAa,KAAK;IACxDb,SAAS,CAAEc,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,GAAG,GAAGC;IAAM,CAAC,CAAC,CAAC;IAChDX,SAAS,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,GAAG,GAAG;IAAG,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMG,aAAa,GAAG,MAAAA,CAAOC,MAAc,EAAExB,GAAW,EAAEY,cAAwB,GAAG,EAAE,KAAK;IAC1F,IAAI,CAACD,cAAc,CAACC,cAAc,CAAC,EAAE;IAErCL,UAAU,CAAC,IAAI,CAAC;IAChBF,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAI;MACF,IAAIoB,YAAY,GAAGzB,GAAG;MACtBY,cAAc,CAACE,OAAO,CAAEC,KAAK,IAAK;QAChC,IAAIf,GAAG,CAAC0B,QAAQ,CAAC,IAAIX,KAAK,GAAG,CAAC,EAAE;UAC9BU,YAAY,GAAGA,YAAY,CAACE,OAAO,CAAC,IAAIZ,KAAK,GAAG,EAAEd,MAAM,CAACc,KAAK,CAAC,IAAI,EAAE,CAAC;QACxE;MACF,CAAC,CAAC;MAEF,MAAMa,UAAU,GAAGhB,cAAc,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEf,KAAK,KAAK;QACvD,IAAI,CAACf,GAAG,CAAC0B,QAAQ,CAAC,IAAIX,KAAK,GAAG,CAAC,EAAE;UAC/Be,GAAG,CAACf,KAAK,CAAC,GAAGd,MAAM,CAACc,KAAK,CAAC;QAC5B;QACA,OAAOe,GAAG;MACZ,CAAC,EAAE,CAAC,CAA2B,CAAC;MAEhC,MAAMC,OAAoB,GAAG;QAC3BP,MAAM;QACNQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;MAED,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAACN,QAAQ,CAACF,MAAM,CAAC,EAAE;QACpCO,OAAO,CAACE,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,UAAU,CAAC;MAC3C;MAEA,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwBZ,YAAY,EAAE,EAAEM,OAAO,CAAC;MAExE,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE;QACX,MAAMC,SAAS,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIC,KAAK,CAAC,UAAUL,GAAG,CAACM,MAAM,MAAMN,GAAG,CAACO,UAAU,MAAMJ,SAAS,CAACK,OAAO,IAAI,eAAe,EAAE,CAAC;MACvG;MAEA,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7BnC,WAAW,CAAC6B,IAAI,CAACC,SAAS,CAACU,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBzC,WAAW,CAAC,UAAUyC,KAAK,CAACF,OAAO,EAAE,CAAC;IACxC,CAAC,SAAS;MACRrC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKqD,SAAS,EAAEvD,MAAM,CAACwD,cAAe;IAAAC,QAAA,gBACpCvD,OAAA;MAAIqD,SAAS,EAAEvD,MAAM,CAAC0D,KAAM;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5C3D,SAAS,CAAC4D,GAAG,CAAEC,KAAK,iBACnB9D,OAAA;MAA0BqD,SAAS,EAAEvD,MAAM,CAACiE,aAAc;MAAAR,QAAA,gBACxDvD,OAAA;QAAIqD,SAAS,EAAEvD,MAAM,CAACkE,UAAW;QAAAT,QAAA,EAAEO,KAAK,CAAC5D;MAAQ;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvD5D,OAAA;QAAKqD,SAAS,EAAEvD,MAAM,CAACmE,gBAAiB;QAAAV,QAAA,EACrCO,KAAK,CAAC3D,OAAO,CAAC0D,GAAG,CAAE/B,MAAM,iBACxB9B,OAAA;UAAAuD,QAAA,gBACEvD,OAAA;YAAAuD,QAAA,GACGzB,MAAM,CAACzB,IAAI,EAAC,IAAE,EAACyB,MAAM,CAAC1B,IAAI;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,EACJ9B,MAAM,CAACvB,MAAM,iBACZP,OAAA;YAAAuD,QAAA,EACGzB,MAAM,CAACvB,MAAM,CAACsD,GAAG,CAAExC,KAAK,iBACvBrB,OAAA;cAAAuD,QAAA,gBACEvD,OAAA;gBACEK,IAAI,EAAC,MAAM;gBACX6D,WAAW,EAAE7C,KAAM;gBACnBM,KAAK,EAAEpB,MAAM,CAACc,KAAK,CAAC,IAAI,EAAG;gBAC3B8C,QAAQ,EAAGC,CAAC,IAAK3C,iBAAiB,CAACJ,KAAK,EAAE+C,CAAC,CAACC,MAAM,CAAC1C,KAAK,CAAE;gBAC1D0B,SAAS,EAAEvD,MAAM,CAACwE;cAAW;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B,CAAC,EACD7C,MAAM,CAACM,KAAK,CAAC,iBAAIrB,OAAA;gBAAMqD,SAAS,EAAEvD,MAAM,CAACsD,KAAM;gBAAAG,QAAA,EAAExC,MAAM,CAACM,KAAK;cAAC;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAR/DvC,KAAK;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,eACD5D,OAAA;YACEuE,OAAO,EAAEA,CAAA,KAAM1C,aAAa,CAACC,MAAM,CAACzB,IAAI,EAAEyB,MAAM,CAACxB,GAAG,EAAEwB,MAAM,CAACvB,MAAM,CAAE;YACrE8C,SAAS,EAAEvD,MAAM,CAAC0E,cAAe;YAAAjB,QAAA,EAClC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAzBD9B,MAAM,CAAC1B,IAAI;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAhCEE,KAAK,CAAC5D,QAAQ;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiCnB,CACN,CAAC,eACF5D,OAAA;MAAKqD,SAAS,EAAEvD,MAAM,CAAC2E,iBAAkB;MAAAlB,QAAA,gBACvCvD,OAAA;QAAAuD,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBhD,OAAO,gBAAGZ,OAAA;QAAAuD,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAAG5D,OAAA;QAAAuD,QAAA,EAAM7C;MAAQ;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnD,EAAA,CAnHID,UAAoB;AAAAkE,EAAA,GAApBlE,UAAoB;AAqH1B,eAAeA,UAAU;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}